version: '3.9'

services:

  # Eureka Server (Service Registry)
  eureka-server-management:
    build:
      context: ./eureka-server-management  # Directory with your Dockerfile for Eureka service
    container_name: eureka-server
    ports:
      - "8761:8761"
    networks:
      - maybank-network
    volumes:
      - ./logs:/app/eureka-logs
    environment:
      - spring.application.name=eureka-server-management
      - eureka.instance.hostname=eureka-server
      - eureka.client.register-with-eureka=false
      - eureka.client.fetch-registry=false
    depends_on:
      - mysql-db

  # MySQL Database (For persistence in both User and Book Management)
  mysql-db:
    image: mysql:5.7
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: toor
      MYSQL_DATABASE: maybank-db
    ports:
      - "3307:3306"
    networks:
      - maybank-network
    volumes:
      - mysql-data:/var/lib/mysql

  # Zookeeper and Kafka (Message broker)
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - maybank-network
  
  kafka1:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "maybank-save-book:1:1"
    networks:
      - maybank-network

  kafka2:
    image: wurstmeister/kafka
    ports:
      - "9093:9092"
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "maybank-save-book:1:1"
    networks:
      - maybank-network

  kafka3:
    image: wurstmeister/kafka
    ports:
      - "9094:9092"
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "maybank-save-book:1:1"
    networks:
      - maybank-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka1
      - kafka2
      - kafka3
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:9092,kafka2:9092,kafka3:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - maybank-network
      
  # User Management Microservice
  user-management:
    build:
      context: ./user-management  # Directory with your Dockerfile for User Management service
    container_name: user-management
    ports:
      - "8070:8070"
    networks:
      - maybank-network
    volumes:
      - ./logs:/app/user-logs
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
      - spring.application.name=user-management
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/maybank-db
      - spring.datasource.username=root
      - spring.datasource.password=toor
      - spring.jpa.hibernate.ddl-auto=update
      - spring.kafka.bootstrap-servers=kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - eureka-server-management
      - mysql-db
      - kafka1
      - kafka2
      - kafka3

  # Book Management Microservice
  book-management:
    build:
      context: ./book-management  # Directory with your Dockerfile for Book Management service
    container_name: book-management
    ports:
      - "8071:8071"
    networks:
      - maybank-network
    volumes:
      - ./logs:/app/book-logs
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka1:9092,kafka2:9092,kafka3:9092
      - spring.application.name=book-management
      - eureka.client.service-url.defaultZone=http://eureka-server:8761/eureka/
      - spring.datasource.url=jdbc:mysql://mysql-db:3306/maybank-db
      - spring.datasource.username=root
      - spring.datasource.password=toor
      - spring.jpa.hibernate.ddl-auto=update
      - spring.kafka.bootstrap-servers=kafka1:9092,kafka2:9092,kafka3:9092
    depends_on:
      - eureka-server-management
      - mysql-db
      - kafka1
      - kafka2
      - kafka3

networks:
  maybank-network:
    driver: bridge

volumes:
  mysql-data:
