server:
  port: 8071

spring:
  kafka:
    topics: maybank-save-book
    consumer:
      auto-offset-reset: earliest
      bootstrap-servers: kafka1:9092 #localhost:9092
      group-id: maybank-kafka
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
  application:
    name: book-management
  jackson:
    serialization:
      WRITE_DATES_AS_TIMESTAMPS: false
    STREAM_WRITE_CONSTRAINTS:
      MAX_NESTING_DEPTH: 2000

  datasource:
    url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/${MYSQL_DB_NAME:maybank-db}?allowPublicKeyRetrieval=true&useSSL=false
    username: ${MYSQL_USER:root}
    password: ${MYSQL_PASSWORD:toor}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        temp:
          use_jdbc_metadata_defaults: false
    hibernate:
      ddl-auto: update
    open-in-view: false

  sql:
    init:
      mode: always

  logging:
    level:
      org.springframework.boot: ERROR

jwt:
  secret: taskformaybanksecretkey@&_)((^$#$#$#$##########@highlysecretkeyREALLYLONGSECRET
  expirationDateInMs: 18000000

frontendURL: http://localhost:8070

usermanagementsystem:
  openapi:
    dev-url: http://localhost:8005

springdoc:
  packages-to-scan: com.maybanktask.book_management
  swagger-ui:
    path: /book-management-ui
  api-docs:
    path: /book-management-docs

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
    register-with-eureka: true
    fetch-registry: true
  instance:
    hostname: book-management

datafeed:
  name: syed
  age: 35
  password: 1234
  email: syed@gmail.com

micro-service:
  book-service:
    name: book-service
    landing-page-url: /book/getall

allowedUrl: http://127.0.0.1:8070/

ignored:
  urls:
    - "/home/**"
    - "/v3/**"
    - "/public"
    - "/api-docs"
    - "/swagger-ui/**"
    - "/v3/api-docs/**"